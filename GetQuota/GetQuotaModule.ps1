###
# Danny Davis
# twitter: twitter.com/pko3
# github: github.com/pkothree
# Created: 02/17/16
# Modified: 02/17/16
# Description: Get Quotas of Site Collections (Module)
# Do Not Edit This File
###

#[System.Reflection.Assembly]::LoadWithPartialName("Microsoft.SharePoint")
if ( (Get-PSSnapin -Name Microsoft.SharePoint.PowerShell -ErrorAction SilentlyContinue) -eq $null )
{
Add-PSSnapin Microsoft.SharePoint.PowerShell
}

function get-scquota
{
    [CmdletBinding()]
    param(
        [string[]]$sitecollections
    )
    begin{}
    process
    {
        $out = "SCQuota.csv"
        "Site"+","+"Quota Limit (MB)"+","+"Total Storage Used (MB)"+","+"Total  Storage Used (%)"+"" | Out-File -Encoding Default -FilePath $out;

        foreach($sc in $sitecollections)
        {
            $site = Get-SPSite $sc
            # Get the quota for the Site Collection, if 0 -> no Quota has been set.
            if($site.Quota.StorageMaximumLevel -gt 0)
            {
              $QuotaLimit =  $site.Quota.StorageMaximumLevel / 1MB
            }
            else
            {
              $QuotaLimit = "no Limit"
            }
            # Get the storage used by the Site Collection, if 0 -> no data stored
            if($site.Usage.Storage -gt 0)
            {
              # Storage used in MB
              $Usage = [math]::Round($site.Usage.Storage / 1MB)
              # Storage  used in %
              $Percentage = 0
              if($QuotaLimit -gt 0)
              {
                # ", 2" ->  round to two digits
                $Percentage = [math]::Round((($Usage / $QuotaLimit) *100), 2)
              }
            }
            else
            {
              $Usage = "0"
            }


            $Site.Url + "," +$QuotaLimit+","+$Usage+","+$Percentage | Out-File -Encoding Default -Append -FilePath $out

            $site.Dispose()
        }
    }
}
